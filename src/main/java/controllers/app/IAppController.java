package controllers.app;

import controllers.*;
import model.characters.Character;
import model.game.IGame;
import model.questions.Question;
import model.repository.IRepository;

import java.io.File;
import java.net.URL;
import java.util.Collection;
import java.util.List;
import java.util.Set;

public interface IAppController {
    MenuController getMenuController();
    URL getMenuUrl();
    void setMenuController(MenuController menuController);
    void saveCharged();
    SettingsController getSettingsController();
    URL getSettingsUrl();
    void setSettingsController(SettingsController settingsController);
    boolean isFileCharged();
    void setRepository(IRepository repository);
    boolean setFile(File file);
    void setGameProgressController(GameProgressController gameProgressController);
    URL getGameProgressUrl();
    GameProgressController getGameProgressController();
    String getNextQuestion();
    void startGame();
    void setGame(IGame game);
    void removeKeys(boolean have);
    void reloadGame();
    int getCharactersSize();
    int getQuestionsSize();
    boolean noQuestionLeft();
    void removeLastQuestion();
    String getLastCharacterName();
    void setCaseOneCharacterController(CaseOneCharacterController caseOneCharacterController);
    URL getCaseOneCharacterUrl();
    CaseOneCharacterController getCaseOneCharacterController();
    URL getSuccessEndUrl();
    SuccessEndController getSuccessEndController();
    void setSuccessEndController(SuccessEndController successEndController);
    URL getFailEndUrl();
    FailEndController getFailEndController();
    void setFailEndController(FailEndController failEndController);
    void addNewCharacter(String characterName, String characterImage, String question);
    void setAddOneCharacterController(AddOneCharacterController addOneCharacterController);
    AddOneCharacterController getAddOneCharacterController();
    URL getAddOneCharacterUrl();
    void comeFromFail();
    boolean getComeFrom(int comeFrom);
    void comeFromSuccess();
    List<Character> getCharactersLeft();
    void setCaseMoreCharacterController(CaseMoreCharacterController caseMoreCharacterController);
    CaseMoreCharacterController getCaseMoreCharacterController();
    URL getCaseMoreCharacterUrl();
    void comeFromMoreCharacter();
    void setCharacterToModify(Character character);
    void setNewParamToCharacterToModify(String name, String image, String question);
    String getCharacterToModifyName();
    String getCharacterToModifyImage();
    void setModifyCharacterController(ModifyCharacterController modifyCharacterController);
    URL getModifyCharacterUrl();
    ModifyCharacterController getModifyCharacterController();
    void setNoCharactersLeftController(NoCharactersLeftController noCharactersLeftController);
    URL getNoCharactersLeftUrl();
    NoCharactersLeftController getNoCharactersLeftController();
    boolean canGoBackQuestion();
    String goBackQuestion();
    boolean createNewSave(String fileName);
    void setCreateNewSaveController(CreateNewSaveController createNewSaveController);
    URL getCreateNewSaveUrl();
    CreateNewSaveController getCreateNewSaveController();
    Set<Character> getCharactersList();
    Set<Question> getQuestionsList();
    URL getModifySaveUrl();
    ModifySaveController getModifySaveController();
    void setModifySaveController(ModifySaveController modifySaveController);
    void saveModifyBank(Collection<Character> characters, Collection<Question> questions);
    String getLastCharacterImage();
}
